/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum ErrorCode {
  NetworkError = 0,
  InvalidArgument = 1,
  AuthenticationFailed = 2,
  NotFound = 3,
  AlreadyExists = 4,
  InternalError = 5
}
/** Client for the Autonomi network */
export declare class JsClient {
  /** Initialize the client with default configuration */
  static init(): Promise<JsClient>
  /** Initialize a client that is configured to be local */
  static initLocal(): Promise<JsClient>
  /** Initialize a client that bootstraps from a list of peers */
  static initWithPeers(peers: Array<string>): Promise<JsClient>
  /** Get a chunk from the network */
  chunkGet(addr: string): Promise<Buffer>
  /** Manually upload a chunk to the network */
  chunkPut(data: Buffer, paymentOption: JsPaymentOption): Promise<string>
}
/** A wallet for interacting with the network's payment system */
export declare class JsWallet {
  /** Creates a new wallet from a private key string */
  constructor(privateKey: string)
  /** Returns a string representation of the wallet's address */
  address(): string
  /** Returns the raw balance of payment tokens in the wallet */
  balance(): Promise<string>
  /** Returns the current balance of gas tokens in the wallet */
  balanceOfGas(): Promise<string>
}
/** Options for making payments on the network */
export declare class JsPaymentOption {
  constructor(wallet: JsWallet)
}
